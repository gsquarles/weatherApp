(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var i=n.getElementsByTagName("script");i.length&&(t=i[i.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const t=e.p+"3c90295a8b055c166c4e.png",n=e.p+"596f9fa63ffd3c4be624.png",i=e.p+"c08af1ef9a6eedaaa448.png",r=e.p+"235a6fdfcf23ab2afa4e.png",a=e.p+"f2547c80b2db197840fe.png",c=document.getElementById("search"),o=document.querySelector("form"),d=document.querySelector(".location"),m=document.querySelector(".temp"),s=document.querySelector(".low"),u=document.querySelector(".high"),h=document.querySelector(".feelLike"),p=document.querySelector(".humidity"),l=document.querySelector(".wind"),w=document.querySelector(".description"),y=document.querySelector(".weatherPic"),g=document.querySelector(".toggleButton");async function f(e){try{if("F"===g.innerHTML){const c=await async function(e){try{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=f824c9a258641470aebe27d4e0e686d3&units=imperial`,{mode:"cors"}),n=await t.json();return{name:n.name,temp:n.main.temp,feelsLike:n.main.feels_like,humidity:n.main.humidity,low:n.main.temp_min,high:n.main.temp_max,weather:n.weather[0].main,wind:n.wind.speed}}catch(e){alert("City not found Try again")}}(e);d.innerText=c.name,m.innerText=Math.round(c.temp)+"°F",s.innerText="Low: "+Math.round(c.low)+"°F",u.innerText="High: "+Math.round(c.high)+"°F",h.innerText="Feels like: "+Math.round(c.feelsLike)+"°F",p.innerText="Humidity: "+Math.round(c.humidity)+"%",l.innerText="Wind Speed: "+c.wind.toFixed(1)+"mph",w.innerText=c.weather,"Clouds"===c.weather?y.src=i:"Clear"===c.weather?y.src=n:"Mist"===c.weather?y.src=r:"Rain"===c.weather?y.src=a:"Snow"===c.weather?y.src=t:y.src=""}else{const t=await async function(e){try{const t=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=f824c9a258641470aebe27d4e0e686d3&units=metric`,{mode:"cors"}),n=await t.json();return{name:n.name,temp:n.main.temp,feelsLike:n.main.feels_like,humidity:n.main.humidity,low:n.main.temp_min,high:n.main.temp_max,weather:n.weather[0].main,wind:n.wind.speed}}catch(e){alert("City not found Try again")}}(e);d.innerText=t.name,m.innerText=Math.round(t.temp)+"°C",s.innerText="Low: "+Math.round(t.low)+"°C",u.innerText="High: "+Math.round(t.high)+"°C",h.innerText="Feels like: "+Math.round(t.feelsLike)+"°C",p.innerText="Humidity: "+Math.round(t.humidity)+"%",l.innerText="Wind Speed: "+t.wind.toFixed(1)+"mph",w.innerText=t.weather,"Clouds"===t.weather?y.src="../dist/imgs/cloudyDay.png":"Clear"===t.weather?y.src="../dist/imgs/sunWeather.png":"Mist"===t.weather?y.src="../dist/imgs/mistPic.png":"Rain"===t.weather?y.src="../dist/imgs/rainyDay.png":"Snow"===t.weather?y.src="../dist/imgs/snowyDay.png":y.src=""}}catch(e){}}o.addEventListener("submit",(e=>{e.preventDefault(),f(c.value),c.value=""})),g.addEventListener("click",(()=>{"F"===g.innerHTML?(g.innerHTML="C",f(d.innerHTML)):(g.innerHTML="F",f(d.innerHTML))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,